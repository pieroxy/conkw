{
  // This is the list of Grabbers. Grabbers are things conkw will be able to fetch infos from.
  "grabbers":[
    //PROC
    {
      // This is the system grabber for Linux OS.
      "implementation":"net.pieroxy.conkw.webapp.grabbers.procgrabber.ProcGrabber",
      "parameters": {
        // List here the block devices of your machine, to monitor I/O, separated by a comma
        // If not specified, devices will be guessed.
        /* "blockDevices":"sda" */
      }
    },
    //SYS
    {
      // Some CPU usage view, filesystem space monitoring, working on all platforms
      "implementation":"net.pieroxy.conkw.webapp.grabbers.JavaSystemViewGrabber",
      "parameters": {
        // List here all the mount points of your machines to monitor free space, separated by a comma.
        // If not specified, mount points will be guessed.
        /* "mountPoints":"/" */
      }
    },
    //OSHI
    {
      // OSHI/JNA view of the system, detailed, works on most platforms, much slower and detailed than Proc on Linux
      "implementation":"net.pieroxy.conkw.webapp.grabbers.oshi.OshiGrabber",
      "parameters": {
        // Default name is "oshi"
        /* "name":"oshi" */
        // The delay between refreshes of the data deemed "static". Defaults to one day.
        /* "staticDataDelay":"1d", */
        // The delay between refreshes of the data deemed "detailed" which is more expensive to extract.
        // Defaults to one minute.
        /* "detailedDataDelay":"1m", */
      },
      // Do not extract "sessions" and "processes" which are the most expensive.
      "extract":"sensors,memory,physicalmemory,virtualmemory,computer,baseboard,firmware,cpu,cpubycore,cpuident,displays,disksio,disksinfos,graphicscards,nics,netbw,battery,psus,soundcards,usb,os,filestores,tcpv4,tcpv6,udpv4,udpv6,sessions,shortsessions,netp",
      "logLevel":"INFO"
    },
    //OSHI-PROCS
    {
      // OSHI/JNA view of the system. This one extracts only the processes.
      "implementation":"net.pieroxy.conkw.webapp.grabbers.oshi.OshiGrabber",
      "name":"oshi-processes",
      "extract":"processes",
      "parameters": {
        "detailedDataDelay":"5s"
      }
    },
    //OSHI-SERVICES
    {
      // OSHI/JNA view of the system. This one extracts only the services.
      "implementation":"net.pieroxy.conkw.webapp.grabbers.oshi.OshiGrabber",
      "extract":"services",
      "name":"oshi-services",
      "parameters": {
        "detailedDataDelay":"5s"
      }
    },
    //OWM
    {
      // OpenWeatherMap grabber. Extracts weather forecast (minutely, hourly, daily) from https://openweathermap.org/
      "implementation":"net.pieroxy.conkw.webapp.grabbers.openweathermap.OpenWeatherMapGrabber",
      // Default name is "owm"
      /* "name":"paris_weather" */
      "config": {
        "toExtract":["minute","hour","day","current"],
        "token":"your api token here",
        "lat":48.8534,
        "lon":2.3488
      }
    },
    //SPOTIFY
    {
      // Spotify grabber. Extracts currently playing stuff from your spotify account.
      "implementation":"net.pieroxy.conkw.webapp.grabbers.spotify.SpotifyGrabber",
      "config": {
        "clientId":"Your client id",
        "clientSecret":"Your client secret",
        "redirectUri":"Your redirect URI"
      }
    },
    //YAHOO FINANCE
    {
      // Yahoo finance grabber. Extracts all sorts of metrics for a stock value, cryptocurrency, etc, here the Apple stock.
      "implementation":"net.pieroxy.conkw.webapp.grabbers.yahooFinance.YahooFinanceGrabber",
      "name":"apple",
      "parameters": {
        "ttl":"5h", // The time between two refreshes. 
        "errorTtl": "10h",
        "symbol":"AAPL",
        "region":"US",
        "key":"your yahoo finance rapidapi key here"
      }
    },
    //BING NEWS
    {
      // Bing News grabber. Extracts a few news headlines.
      "implementation":"net.pieroxy.conkw.webapp.grabbers.bingnews.BingNewsGrabber",
      "config": {
        "ttl":"1h", // The time between two refreshes. 
        "errorTtl": "2h",
        "countrycode":"us", // To get U.S. news.
        "key":"your bing news rapidapi key here"
      }
    },
    //HTTPS
    {
      // Https cert grabber. Extracts expiration date of an https cert.
      "implementation":"net.pieroxy.conkw.webapp.grabbers.http.HttpsCertGrabber",
      "config": {
        "domains": [
          "google.com",
          "facebook.com",
          "apple.com"
        ]
      }
    },
    //HTTP
    {
      // Http endpoint grabber. Extracts size, response time and custom regexp captures from a http(s) endpoint.
      "implementation":"net.pieroxy.conkw.webapp.grabbers.http.HttpEndpointGrabber",
      "name":"http_em_sys",
      "config": {
        "endpoints":[
          {
            "id":"sysgrabber",
            "url":"http://localhost:12789/api?grabbers=sys",
            "toExtract":[
              {
                "id":"cpu",
                "pattern":".*\"totalCpuUsage\":([0-9+-e.]+),.*",
                "number":true
              }
            ]
          },
          {
            "id":"home",
            "url":"http://localhost:12789/"
          }
        ]
      }
    },
    //HTTP
    {
      // Http endpoint grabber. Extracts size, response time and custom regexp captures from a http(s) endpoint.
      "implementation":"net.pieroxy.conkw.webapp.grabbers.http.HttpEndpointGrabber",
      "name":"http_em_exts",
      "config": {
        "ttl": "1m",
        "endpoints":[
          {
            "id":"slack",
            "url":"https://status.slack.com/api/v2.0.0/current",
            "toExtract":[
              {
                "id":"ok",
                "pattern":".*\"status\":\"ok\".*",
                "number":false
              }
            ]
          },
          {
            "id":"office365",
            "url": "https://portal.office.com/servicestatus",
            "toExtract":[
              {
                "id":"ok",
                "pattern":".*Everything is up and running.*",
                "number":false
              }
            ]
          },
          {
            "id":"trello",
            "url": "https://trello.status.atlassian.com/",
            "toExtract":[
              {
                "id":"ok",
                "pattern":".*All Systems Operational.*",
                "number":false
              }
            ]
          },
          {
            "id":"opsgenie",
            "url": "https://opsgenie.status.atlassian.com/",
            "toExtract":[
              {
                "id":"ok",
                "pattern":".*All Systems Operational.*",
                "number":false
              }
            ]
          },
          {
            "id":"googleWorkspace",
            "url": "https://www.google.com/appsstatus/dashboard/",
            "toExtract":[
              {
                "id":"ok",
                "pattern":"(<a class=\"status-icon available\"></a>)",
                "number":false
              }
            ]
          }
        ]
      }
    },
    
    //FILE
    {
      // File grabber. Extracts data from flat files.
      "implementation":"net.pieroxy.conkw.webapp.grabbers.FileGrabber",
      "name":"samplefile",
      "parameters": {
        "file":"$FGSF"
      }
    },
    //EMG
    {
      // External metric grabber. Exposes metrics injected through the /emi endpoint.
      "implementation":"net.pieroxy.conkw.webapp.grabbers.ExternalMetricsGrabber",
      "name":"test_emi",
      "parameters": {
      }
    },
    //EIG
    {
      // External instance grabber. Grabs metrics from another live instance of conkw.
      "implementation":"net.pieroxy.conkw.webapp.grabbers.ExternalInstanceGrabber",
      "name":"test_eig",
      "parameters": {
        "url":"http://localhost:12789/api?grabbers=sys",
        // The following fields are used if the remote endpoint is authenticated
        "login":"Remote api login here",
        "password":"Remote api password here"
      }
    },
    //PEMIG
    {
      "implementation":"net.pieroxy.conkw.webapp.grabbers.PushToEmiGrabber",
      "extract":"sys",
      "name":"p2emi",
      "parameters": {
        "url":"http://localhost:12789/emi?ns=test_emi",
        "prefix":"testpush"
      }
    },
    //lm-sensors
    {
      "implementation":"net.pieroxy.conkw.webapp.grabbers.LmSensorsGrabber",
      "name":"lmsensors",
      "parameters": {
        "include":".*_input"
      }
    },
    //hwmon
    {
      "implementation":"net.pieroxy.conkw.webapp.grabbers.HwmonGrabber",
      "name":"hwmon",
      "parameters": {
      }
    },
    //LATEST EMAILS
    {
      // This is the latest email grabber.
      "implementation":"net.pieroxy.conkw.webapp.grabbers.email.LatestUnreadMailsGrabber",
      "name":"mails",
      "config": {
        "ttl":"5m", // Default value
        "maxMessages":10, // Default value
        "accounts": [
        // Sample configuration for gmail
          {
            "name": "my gmail account",
            "server":"imap.googlemail.com",
            "port":993,
            "login":"my_account@gmail.com",
            "password":"" // my gmail password
          },
          // Sample configuration for outlook365
          {
            "name": "my hotmail account",
            "server":"outlook.office365.com",
            "port":993,
            "login":"my_email@hotmail.com",
            "password":"" // my hotmail password
          }
        ]
      }
    },
    //SPECIFIC EMAIL
    {
      // This is the specific email grabber.
      "implementation":"net.pieroxy.conkw.webapp.grabbers.email.SpecificEmailCheckGrabber",
      "parameters": {
        /* "ttl":"5m" */
        "folder":"YourImapFolder",
        "subjectRegexp":"Specify the subject regexp",
        "senderRegexp":"specify the sender email",
        "bodyRegexp":"Specify the body regexp"
      },
      "namedParameters": {
        "imapConf": {
          "server":"imap.googlemail.com",
          "port":"993",
          "login":"my_account@gmail.com",
          "password":""
        }
      }
    },
    // Log file tail
    {
      "implementation":"net.pieroxy.conkw.webapp.grabbers.logfile.TailLogFileGrabber",
      "parameters": {
        "filename":"$HTTPLOGFILE",
        "parserClassName":"net.pieroxy.conkw.webapp.grabbers.logfile.parsers.HttpLogFileParser",
        "accumulators":"multi([name(sizehist,log125hist(size,1000,1000000)),name(byct,stablekey(contentType,count(),3)),name(byuri,stablekey(uri,count(),3)),sum(size,0),count(),sum(time,0)])"
      }
    }
   //END OF GRABBERS
  ],
  "apiAuth":{
    "auth":false, // Set to true to activate API authentication 
    "sessionLifetime":"1y", // Delay after which every session expires.
    "sessionInactivityTimeout":"30d", // Delay after which every unused session expires.
    "users":[ // You can define here many users.
      {
        "login":"testuser",
        "password":"foobar"
      }
    ]
  },

  // This is the port the web server will listen to. Note that values below 1024 are discouraged as they require
  // the process to be launched as root.
  "httpPort": 12789,

  // If true, bandwidth usage will decrease but CPU usage will increase. 
  // Note that compression is always on for static resources (html, css, js, ...)
  "enableApiCompression":true, 

  // If true, the default UI answering at / will not be run. This includes reference UI for grabbers, documentation and js, css and image files.
  "disableDefaultUI":false,
  // If true, the custom UI answering at /ui will not be run. This includes every file under $CONKW_HOME/ui
  "disableCustomUI":false,
  // If true, the API answering at /api will not be run. No UI will work against this instance because no metrics can be served.
  "disableApi":false,
  // If true, the EMI answering at /emi will not be run. If no EMG grabbers are configured it makes sense.
  "disableEmi":false
  
  // NOTE: If all four flags above are set to true, no web server will be run along with conkw.
}